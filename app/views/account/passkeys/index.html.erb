<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/account">Home</a></li>
    <li class="breadcrumb-item active" aria-current="page">My Passkeys</li>
  </ol>
</nav>

<div class="container-fluid pl-sm-5 pr-sm-5">
  <table class="table table-bordered table-responsive-sm table-hover table-condensed w-100">
    <tr>
      <th>Credential ID</th>
      <th>Created At</th>
      <th>Sign Count</th>
      <th>Last Used</th>
      <th class="text-center">Action</th>
    </tr>
    <tbody id="tag_replacements">
    <% @credentials.each do |cred| %>
      <tr id="<%= cred.id %>">
        <td>
          <%= cred.nickname || "Name not set" %><br>
          <small class="text-muted"><%= cred.credential_id %></small>
        </td>
        <td><%= systime(cred.created_at) %></td>
        <td><%= cred.sign_count %></td>
        <td><%= cred.last_used ? systime(cred.last_used) : "- never -" %></td>
        <td nowrap="nowrap" class="text-center">
          <%= link_to "<i class='fa fa-edit'></i> edit".html_safe, edit_account_passkey_path(cred), class: "btn btn-info btn-sm" %> &nbsp;
          <%= link_to "<i class='fa fa-trash'></i> delete".html_safe, account_passkey_path(cred), class: "btn btn-danger btn-sm", method: :delete, data: { confirm: "Are you sure you want to delete this Passkey?" } %>
        </td>
      </tr>
    <% end %>
    </tbody>
  </table>

  <a href="#" id="new-passkey" class="btn btn-primary">
    <i class="glyphicon glyphicon-plus"></i> New passkey
  </a>
</div>

<% content_for :title do %>
  My Passkeys
<% end %>

<% content_for :head do %>
  <script>
      function arrayBufferToBase64(buffer) {
          let binary = '';
          const bytes = new Uint8Array(buffer);
          const len = bytes.byteLength;
          for (let i = 0; i < len; i++) {
              binary += String.fromCharCode(bytes[i]);
          }
          return window.btoa(binary);
      }
  </script>

  <script type="module">
      const publicKeyCredentialCreationOptions = {
          challenge: Uint8Array.from(
            "<%= session[:challenge] %>", c => c.charCodeAt(0)),
          rp: {
              name: "<%= Rails.configuration.website_name %>",
              id: "<%= Rails.configuration.webauthn_rpid %>",
          },
          user: {
              id: Uint8Array.from(
                  "<%= current_user.webauthn_user_handle %>", c => c.charCodeAt(0)),
              name: "<%= current_user.email %>",
              displayName: "<%= current_user.name %>",
          },
          pubKeyCredParams: [
              {alg: -7, type: "public-key"},
              {alg: -257, type: "public-key"}
          ],
          authenticatorSelection: {
              "residentKey": "required",
              "requireResidentKey": true,
              "userVerification": "preferred"
          },
          timeout: 60000,
          attestation: "direct"
      };

      $(document).ready(function(){
          $('#new-passkey').click(async function(){
              const credential = await navigator.credentials.create({
                  publicKey: publicKeyCredentialCreationOptions
              });
              console.log(credential);

              $.post("/account/passkeys",
                {
                    credential_id: credential.id,
                    clientDataJSON: arrayBufferToBase64(credential.response.clientDataJSON),
                    attestationObject: arrayBufferToBase64(credential.response.attestationObject)
                },
                function(data, status){
                  if (status == "success")
                      location.reload();
                  else
                      alert("Data: " + data + "\nStatus: " + status);
                });
          });
      });
  </script>
<% end %>

